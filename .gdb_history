run
info locals
p pool
p *pool
p pool->job_tail
p *job->job_tail
p *(job->job_tail)
p *pool->job_tail
quit
b 295
run
p pool->job_head
p *pool->job_head
p pool->job_tail
quit
run
run
c
c
exit
quit
run
info sources
frame
info frame
up
up
list
quit
b 395
run
quit
b 395
run
quit
run
step
quit
run
backtrace
quit
run
run
quit
b 349
b 349
run
c
p pool->pool_idle
p pool->pool_nthreads
quit
b 39
run
watch pool->pool_idle
c
p global_pool_head
watch global_pool_head->pool_idle
c
c
c
c
c
c
c
quit
b 39
run
step
step
step
step
step
step
step
step
step
p global_pool_head
watch global_pool_head->pool_idle
c
c
c
c
c
c
quit
run
backtrace
quit
quit
run
quit
b pool_destroy
run
step
step
step
step
step
step
step
quit
b pool_create
run
c
quit
b 488
run
quit
run
step
step
step
step
step
step
step
step
step
step
step
quit
b pool_queue
run
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
list
p thread_list
p *thread_list
define plist
  set var $n = $arg0->head
  while $n
    printf "%d ", $n->data
    set var $n = $n->next
  end
end
(gdb) plist myList
plist *thread_list
define plist
set var $n = $arg0
while $n
printf "%d %d", $n->thread, $n->next
set var $n = $n->next
end
end
plist *thread_list
print *thread_list->thread
print *thread_list->next
print *thread_list->next->next
print *thread_list->next->next->next

print *thread_list->next->next->next->next
print *thread_list->next->next->next->next->next
print *thread_list->next->next->next->next->next->next
b pool_destroy
breakpoints
b
del 3
del 1
c
step
step
step
step
step
step
step
step
b pool_destroy
c
step
step
c
exit
quit
run
c
c
c
c
c
c
c
c
c
c
c
c
c
c
si
si
si
si
set logging on
si
si
si
s
si
c
c
c
c
quit
